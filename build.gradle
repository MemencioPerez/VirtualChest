plugins {
    id 'java'
    id 'maven-publish'
    id 'de.schablinski.activejdbc-gradle-plugin' version '2.0.1'
    id 'com.gradleup.shadow' version '9.0.0-beta17'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
}

defaultTasks 'clean', 'build'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }
    maven {
        name = "CodeMC"
        url = 'https://repo.codemc.io/repository/maven-public/'
    }
}

group = 'com.github.ustc_zzzz'
version = '1.0.0-SNAPSHOT'

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    shadow 'org.javalite:activejdbc:1.4.13'
    implementation 'me.clip:placeholderapi:2.11.6'
    implementation 'com.github.MilkBowl:VaultAPI:1.7'
    shadow 'org.spongepowered:configurate-hocon:3.7.3'
    shadow 'org.bstats:bstats-base:3.1.0'
    shadow 'org.bstats:bstats-bukkit:3.1.0'
    shadow 'com.github.zafarkhaja:java-semver:0.10.2'
    shadow 'com.github.spotbugs:spotbugs-annotations:4.9.3'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.11.0' // Added NBT-API
    // JDBC Drivers for ActiveJDBC
    shadow 'com.h2database:h2:2.2.224' // For H2 file database (default)
    shadow 'org.xerial:sqlite-jdbc:3.46.0.0' // For SQLite
    // MySQL driver can be added if direct support is desired, or let users add it.
    // implementation 'mysql:mysql-connector-java:8.0.33'
}

java {
    withSourcesJar()
}

sourceSets {
    main {
        java.srcDir 'src/'
        java.srcDir 'api/'
        resources.srcDir 'resources/'
    }
    api {
        java.srcDir 'api/'
        compileClasspath += sourceSets.main.compileClasspath
        runtimeClasspath += sourceSets.main.runtimeClasspath
    }
}

tasks.register('apiJar', Jar) {
    dependsOn sourcesJar
    archivesBaseName = 'VirtualChestAPI'

    from sourceSets.api.allSource
    from sourceSets.api.output
    from 'LICENSE'
}

artifacts {
    archives apiJar
    archives shadowJar
    archives sourcesJar
}

def targetJavaVersion = 11
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:-options'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.named('jar', Jar).configure {
    finalizedBy 'shadowJar'
    manifest {
        attributes(
                'paperweight-mappings-namespace': 'mojang'
        )
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier = ''

    relocate 'org.javalite', project.group.toString() + '.virtualchest.util.repackage.org.javalite'
    relocate 'ninja.leaping.configurate', project.group.toString() + '.virtualchest.util.repackage.ninja.leaping.configurate'
    relocate 'org.bstats', project.group.toString() + '.virtualchest.util.repackage.org.bstats'
    relocate 'com.github.zafarkhaja.semver', project.group.toString() + '.virtualchest.util.repackage.com.github.zafarkhaja.semver'
    relocate 'org.h2', project.group.toString() + '.virtualchest.util.repackage.org.h2' // H2 relocation
    relocate 'org.sqlite', project.group.toString() + '.virtualchest.util.repackage.org.sqlite' // SQLite relocation
    // relocate 'com.mysql', project.group.toString() + '.virtualchest.util.repackage.com.mysql' // MySQL relocation
}

tasks {
    runServer {
        minecraftVersion("1.16.5")
        downloadPlugins {
            hangar("placeholderapi", "2.11.6")
            hangar("vaultunlocked", "2.12.0")
            modrinth("nbtapi", "2.15.0")
        }
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}